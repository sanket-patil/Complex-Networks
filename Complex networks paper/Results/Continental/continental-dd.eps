%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 200 600 624
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[0.5 5 div 0 0 0.5 5 div neg  0 3120 5 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
32 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
1 Setcolor
10 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
[] 0 setdash
10 Thickness
0 Setcolor
 (drawpoly) 8 [ -1]
[729 3710 750 3731 771 3710 750 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[761 970 782 991 803 970 782 949 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[793 1258 814 1279 835 1258 814 1237 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[825 681 846 702 867 681 846 660 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[858 3422 879 3443 900 3422 879 3401 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[890 3566 911 3587 932 3566 911 3545 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[922 3566 943 3587 964 3566 943 3545 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[954 3710 975 3731 996 3710 975 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[986 3710 1007 3731 1028 3710 1007 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1018 3710 1039 3731 1060 3710 1039 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1050 3710 1071 3731 1092 3710 1071 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1083 3638 1104 3659 1125 3638 1104 3617 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1115 3710 1136 3731 1157 3710 1136 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1147 3710 1168 3731 1189 3710 1168 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1179 3710 1200 3731 1221 3710 1200 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1211 3710 1232 3731 1253 3710 1232 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1243 3710 1264 3731 1285 3710 1264 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1275 3710 1296 3731 1317 3710 1296 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1308 3710 1329 3731 1350 3710 1329 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1340 3710 1361 3731 1382 3710 1361 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1372 3710 1393 3731 1414 3710 1393 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1404 3710 1425 3731 1446 3710 1425 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1436 3710 1457 3731 1478 3710 1457 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1468 3710 1489 3731 1510 3710 1489 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1500 3710 1521 3731 1542 3710 1521 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1533 3710 1554 3731 1575 3710 1554 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1565 3710 1586 3731 1607 3710 1586 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1597 3710 1618 3731 1639 3710 1618 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1629 3710 1650 3731 1671 3710 1650 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1661 3710 1682 3731 1703 3710 1682 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1693 3710 1714 3731 1735 3710 1714 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1725 3710 1746 3731 1767 3710 1746 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1758 3710 1779 3731 1800 3710 1779 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1790 3710 1811 3731 1832 3710 1811 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1822 3710 1843 3731 1864 3710 1843 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1854 3710 1875 3731 1896 3710 1875 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1886 3710 1907 3731 1928 3710 1907 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1918 3710 1939 3731 1960 3710 1939 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1950 3710 1971 3731 1992 3710 1971 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[1983 3710 2004 3731 2025 3710 2004 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2015 3710 2036 3731 2057 3710 2036 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2047 3710 2068 3731 2089 3710 2068 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2079 3710 2100 3731 2121 3710 2100 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2111 3710 2132 3731 2153 3710 2132 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2143 3710 2164 3731 2185 3710 2164 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2175 3710 2196 3731 2217 3710 2196 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2208 3710 2229 3731 2250 3710 2229 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2240 3710 2261 3731 2282 3710 2261 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2272 3710 2293 3731 2314 3710 2293 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2304 3710 2325 3731 2346 3710 2325 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2336 3710 2357 3731 2378 3710 2357 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2368 3710 2389 3731 2410 3710 2389 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2400 3710 2421 3731 2442 3710 2421 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2433 3710 2454 3731 2475 3710 2454 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2465 3710 2486 3731 2507 3710 2486 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2497 3710 2518 3731 2539 3710 2518 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2529 3710 2550 3731 2571 3710 2550 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2561 3710 2582 3731 2603 3710 2582 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2593 3710 2614 3731 2635 3710 2614 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2625 3710 2646 3731 2667 3710 2646 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2658 3710 2679 3731 2700 3710 2679 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2690 3710 2711 3731 2732 3710 2711 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2722 3710 2743 3731 2764 3710 2743 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2754 3710 2775 3731 2796 3710 2775 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2786 3710 2807 3731 2828 3710 2807 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2818 3710 2839 3731 2860 3710 2839 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2850 3638 2871 3659 2892 3638 2871 3617 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2883 3710 2904 3731 2925 3710 2904 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2915 3710 2936 3731 2957 3710 2936 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2947 3710 2968 3731 2989 3710 2968 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[2979 3710 3000 3731 3021 3710 3000 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3011 3710 3032 3731 3053 3710 3032 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3043 3710 3064 3731 3085 3710 3064 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3075 3710 3096 3731 3117 3710 3096 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3108 3710 3129 3731 3150 3710 3129 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3140 3710 3161 3731 3182 3710 3161 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3172 3710 3193 3731 3214 3710 3193 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3204 3710 3225 3731 3246 3710 3225 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3236 3710 3257 3731 3278 3710 3257 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3268 3710 3289 3731 3310 3710 3289 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3300 3710 3321 3731 3342 3710 3321 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3333 3710 3354 3731 3375 3710 3354 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3365 3710 3386 3731 3407 3710 3386 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3397 3710 3418 3731 3439 3710 3418 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3429 3638 3450 3659 3471 3638 3450 3617 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3461 3710 3482 3731 3503 3710 3482 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3493 3710 3514 3731 3535 3710 3514 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3525 3710 3546 3731 3567 3710 3546 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3558 3710 3579 3731 3600 3710 3579 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3590 3710 3611 3731 3632 3710 3611 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3622 3710 3643 3731 3664 3710 3643 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3654 3710 3675 3731 3696 3710 3675 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3686 3710 3707 3731 3728 3710 3707 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3718 3710 3739 3731 3760 3710 3739 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3750 3710 3771 3731 3792 3710 3771 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3783 3710 3804 3731 3825 3710 3804 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3815 3710 3836 3731 3857 3710 3836 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3847 3710 3868 3731 3889 3710 3868 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3879 3710 3900 3731 3921 3710 3900 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3911 3710 3932 3731 3953 3710 3932 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3943 3710 3964 3731 3985 3710 3964 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[3975 3710 3996 3731 4017 3710 3996 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4008 3710 4029 3731 4050 3710 4029 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4040 3710 4061 3731 4082 3710 4061 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4072 3710 4093 3731 4114 3710 4093 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4104 3710 4125 3731 4146 3710 4125 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4136 3710 4157 3731 4178 3710 4157 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4168 3638 4189 3659 4210 3638 4189 3617 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4200 3710 4221 3731 4242 3710 4221 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4233 3710 4254 3731 4275 3710 4254 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4265 3710 4286 3731 4307 3710 4286 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4297 3710 4318 3731 4339 3710 4318 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4329 3710 4350 3731 4371 3710 4350 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4361 3710 4382 3731 4403 3710 4382 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4393 3710 4414 3731 4435 3710 4414 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4425 3710 4446 3731 4467 3710 4446 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4458 3710 4479 3731 4500 3710 4479 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4490 3710 4511 3731 4532 3710 4511 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4522 3710 4543 3731 4564 3710 4543 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4554 3710 4575 3731 4596 3710 4575 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4586 3710 4607 3731 4628 3710 4607 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4618 3710 4639 3731 4660 3710 4639 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4650 3710 4671 3731 4692 3710 4671 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4683 3710 4704 3731 4725 3710 4704 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4715 3710 4736 3731 4757 3710 4736 3689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
 (drawpoly) 8 [ -1]
[4747 3710 4768 3731 4789 3710 4768 3689 
] dogrey 
0 Setcolor
/absolu true def
[] 0 setdash
10 Thickness
0 Setcolor
1 Setcolor
10 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 252 [ 0]
[750 3710 782 970 814 1258 846 681 879 3422 911 3566 943 3566 975 3710 1007 3710 1039 3710 
1071 3710 1104 3638 1136 3710 1168 3710 1200 3710 1232 3710 1264 3710 1296 3710 1329 3710 1361 3710 
1393 3710 1425 3710 1457 3710 1489 3710 1521 3710 1554 3710 1586 3710 1618 3710 1650 3710 1682 3710 
1714 3710 1746 3710 1779 3710 1811 3710 1843 3710 1875 3710 1907 3710 1939 3710 1971 3710 2004 3710 
2036 3710 2068 3710 2100 3710 2132 3710 2164 3710 2196 3710 2229 3710 2261 3710 2293 3710 2325 3710 
2357 3710 2389 3710 2421 3710 2454 3710 2486 3710 2518 3710 2550 3710 2582 3710 2614 3710 2646 3710 
2679 3710 2711 3710 2743 3710 2775 3710 2807 3710 2839 3710 2871 3638 2904 3710 2936 3710 2968 3710 
3000 3710 3032 3710 3064 3710 3096 3710 3129 3710 3161 3710 3193 3710 3225 3710 3257 3710 3289 3710 
3321 3710 3354 3710 3386 3710 3418 3710 3450 3638 3482 3710 3514 3710 3546 3710 3579 3710 3611 3710 
3643 3710 3675 3710 3707 3710 3739 3710 3771 3710 3804 3710 3836 3710 3868 3710 3900 3710 3932 3710 
3964 3710 3996 3710 4029 3710 4061 3710 4093 3710 4125 3710 4157 3710 4189 3638 4221 3710 4254 3710 
4286 3710 4318 3710 4350 3710 4382 3710 4414 3710 4446 3710 4479 3710 4511 3710 4543 3710 4575 3710 
4607 3710 4639 3710 4671 3710 4704 3710 4736 3710 4768 3710 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(0) 723 3874 0  0.00 [723 3774 55 99] Show
%Latex:\myput{723}{366}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3773 
] dogrey 
32 Setcolor
32 Setcolor
(20) 1338 3874 0  0.00 [1338 3774 111 99] Show
%Latex:\myput{1338}{366}{5}{20}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1393 3710 1393 3773 
] dogrey 
32 Setcolor
32 Setcolor
(40) 1981 3874 0  0.00 [1981 3774 111 99] Show
%Latex:\myput{1981}{366}{5}{40}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[2036 3710 2036 3773 
] dogrey 
32 Setcolor
32 Setcolor
(60) 2624 3874 0  0.00 [2624 3774 111 99] Show
%Latex:\myput{2624}{366}{5}{60}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[2679 3710 2679 3773 
] dogrey 
32 Setcolor
32 Setcolor
(80) 3266 3874 0  0.00 [3266 3774 111 99] Show
%Latex:\myput{3266}{366}{5}{80}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3321 3710 3321 3773 
] dogrey 
32 Setcolor
32 Setcolor
(100) 3881 3874 0  0.00 [3881 3774 166 99] Show
%Latex:\myput{3881}{366}{5}{100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3964 3710 3964 3773 
] dogrey 
32 Setcolor
32 Setcolor
(120) 4524 3874 0  0.00 [4524 3774 166 99] Show
%Latex:\myput{4524}{366}{5}{120}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4607 3710 4607 3773 
] dogrey 
32 Setcolor
32 Setcolor
(140) 5167 3874 0  0.00 [5167 3774 166 99] Show
%Latex:\myput{5167}{366}{5}{140}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5250 3710 5250 3773 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[964 3710 964 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1179 3710 1179 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1393 3710 1393 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1607 3710 1607 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1821 3710 1821 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2036 3710 2036 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2250 3710 2250 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2464 3710 2464 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2679 3710 2679 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2893 3710 2893 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3107 3710 3107 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3321 3710 3321 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3536 3710 3536 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3750 3710 3750 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3964 3710 3964 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4179 3710 4179 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4393 3710 4393 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4607 3710 4607 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4821 3710 4821 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[5036 3710 5036 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(0.00) 484 3749 0  0.00 [484 3649 194 99] Show
%Latex:\myput{484}{491}{5}{0.00}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 690 3710 
] dogrey 
32 Setcolor
32 Setcolor
(0.05) 484 3295 0  0.00 [484 3195 194 99] Show
%Latex:\myput{484}{945}{5}{0.05}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3256 690 3256 
] dogrey 
32 Setcolor
32 Setcolor
(0.10) 484 2840 0  0.00 [484 2740 194 99] Show
%Latex:\myput{484}{1400}{5}{0.10}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2801 690 2801 
] dogrey 
32 Setcolor
32 Setcolor
(0.15) 484 2386 0  0.00 [484 2286 194 99] Show
%Latex:\myput{484}{1854}{5}{0.15}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2347 690 2347 
] dogrey 
32 Setcolor
32 Setcolor
(0.20) 484 1932 0  0.00 [484 1832 194 99] Show
%Latex:\myput{484}{2308}{5}{0.20}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1893 690 1893 
] dogrey 
32 Setcolor
32 Setcolor
(0.25) 484 1478 0  0.00 [484 1378 194 99] Show
%Latex:\myput{484}{2762}{5}{0.25}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1439 690 1439 
] dogrey 
32 Setcolor
32 Setcolor
(0.30) 484 1023 0  0.00 [484 923 194 99] Show
%Latex:\myput{484}{3217}{5}{0.30}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 984 690 984 
] dogrey 
32 Setcolor
32 Setcolor
(0.35) 484 569 0  0.00 [484 469 194 99] Show
%Latex:\myput{484}{3671}{5}{0.35}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 530 690 530 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3559 705 3559 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3407 705 3407 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3256 705 3256 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3104 705 3104 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2953 705 2953 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2801 705 2801 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2650 705 2650 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2499 705 2499 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2347 705 2347 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2196 705 2196 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2044 705 2044 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1893 705 1893 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1741 705 1741 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1590 705 1590 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1439 705 1439 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1287 705 1287 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1136 705 1136 
] dogrey 
 (drawsegs) 4 [ 32]
[750 984 705 984 
] dogrey 
 (drawsegs) 4 [ 32]
[750 833 705 833 
] dogrey 
 (drawsegs) 4 [ 32]
[750 681 705 681 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 5250 3710 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 530 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Degree Distribution \(Continental Airlines\)) 2990 238 0  0.00 [2990 138 1811 99] Show
%Latex:\myput{2990}{4002}{5}{Degree Distribution (Continental Airlines)}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Degree \(k\)) 2998 4956 0  0.00 [2998 4856 472 99] Show
%Latex:\myput{2998}{-716}{5}{Degree (k)}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(P\(k\)) 405 2785 0 270.00 [405 2685 183 99] Show
%Latex:\myput{405}{1455}{5}{P(k)}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

