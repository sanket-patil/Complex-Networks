% Mean average path algorithm:% Implements shortest path algorithm, from a single vertex to all others% Gergana Bounova, Last Updated: December 13, 2004function [dij,d] = shortest_path(adj,adjL,ind1,ind2)% inputs: adjacency matrix%         matrix of weights/distances%         start and end nodes, ind1 and ind2% outputs: shortest path length between start and end nodes%          shortest path length from start node to all other nodes% need set of vertices and connecting edgesnodes = size(adj,2);d = inf*ones(1,nodes); % distance s-all nodesd(ind1) = 0;    % s-s distanceT = 1:nodes;    % node set with shortest paths not foundwhile length(T)>1    [dmin,ind] = min(d(T));    for j=1:length(T)        if adj(T(ind),T(j))>0 & d(T(j))>d(T(ind))+adjL(T(ind),T(j))            d(T(j))=d(T(ind))+adjL(T(ind),T(j));        end    end     T = setdiff(T,T(ind));enddij = d(ind2);